# 1) Pull in standalone Swagger UI assets
FROM swaggerapi/swagger-ui:v4.18.2 AS swagger-ui

# 2) Base image: CUDA 11.8 on Ubuntu 22.04
FROM nvidia/cuda:12.6.0-base-ubuntu22.04

# 3) Environment & pyenv bootstrap
ENV PYTHON_VERSION=3.12.0
ENV PYENV_ROOT=/root/.pyenv
ENV PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"

# In-project Poetry venv & placeholder for GCP creds
ENV POETRY_VENV=/app/.venv
ENV GOOGLE_APPLICATION_CREDENTIALS=/secrets/sa.json

# ASR_MODEL / ASR_ENGINE are only needed at runtime, but we copy them here
# so they’re available for build-time pre-loading if you choose.
ARG ASR_MODEL=small
ARG ASR_ENGINE=faster_whisper
ENV ASR_MODEL=${ASR_MODEL}
ENV ASR_ENGINE=${ASR_ENGINE}

ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# 4) Install build deps + ffmpeg
RUN apt-get update -qq && \
    apt-get install -qq --no-install-recommends \
      build-essential curl git \
      libbz2-dev libffi-dev libreadline-dev libsqlite3-dev libssl-dev \
      liblzma-dev libncurses5-dev libncursesw5-dev uuid-dev tk-dev \
      xz-utils zlib1g-dev python3-pip ffmpeg && \
    rm -rf /var/lib/apt/lists/*

# 5) Install pyenv & compile Python 3.12
RUN git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT
RUN export PATH="$PYENV_ROOT/bin:$PATH" && \
    pyenv install ${PYTHON_VERSION} && \
    pyenv global   ${PYTHON_VERSION} && \
    pyenv rehash

# Symlink shims so /usr/bin/python3→3.12
RUN ln -sfn "$(pyenv which python)"  /usr/bin/python && \
    ln -sfn "$(pyenv which python3)" /usr/bin/python3 && \
    ln -sfn "$(pyenv which pip)"     /usr/bin/pip

# 6) Create venv & install Poetry 2.1.3
RUN python3 -m venv $POETRY_VENV && \
    $POETRY_VENV/bin/pip install -U pip "setuptools<81" && \
    $POETRY_VENV/bin/pip install poetry==2.1.3

ENV PATH="${PATH}:${POETRY_VENV}/bin"
WORKDIR /app

# 7) Install deps (without your own code yet)
COPY poetry.lock pyproject.toml ./
RUN poetry config virtualenvs.in-project true && \
    poetry install --no-root

# 8) Copy your app + swagger assets
COPY . .
COPY --from=swagger-ui /usr/share/nginx/html/swagger-ui.css    swagger-ui-assets/swagger-ui.css
COPY --from=swagger-ui /usr/share/nginx/html/swagger-ui-bundle.js swagger-ui-assets/swagger-ui-bundle.js

# 9) Install your package and GPU PyTorch
RUN poetry install && \
    $POETRY_VENV/bin/pip install --upgrade \
    -f https://download.pytorch.org/whl/cu126/torch_stable.html \
    torch==2.7.1

# 11) Entrypoint & default CMD
ENTRYPOINT ["gunicorn", "--bind", "0.0.0.0:9000", "--workers", "1", "--timeout", "0", "app.webservice:app", "-k", "uvicorn.workers.UvicornWorker"]
CMD []
