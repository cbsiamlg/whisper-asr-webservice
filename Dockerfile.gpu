FROM swaggerapi/swagger-ui:v4.18.2 AS swagger-ui
FROM nvidia/cuda:11.8.0-base-ubuntu22.04

ENV PYTHON_VERSION=3.12.0
ENV PYENV_ROOT=/root/.pyenv
ENV PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"
ENV POETRY_VENV=/app/.venv
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# 1. Install build-deps (for compiling CPython) + ffmpeg
RUN apt-get update -qq && \
    apt-get install -qq --no-install-recommends \
      build-essential \
      curl \
      git \
      libbz2-dev \
      libffi-dev \
      libreadline-dev \
      libsqlite3-dev \
      libssl-dev \
      liblzma-dev \
      libncurses5-dev \
      libncursesw5-dev \
      libuuid1 \
      uuid-dev \
      tk-dev \
      xz-utils \
      zlib1g-dev \
      python3-pip \
      ffmpeg && \
    rm -rf /var/lib/apt/lists/*

# 2. Clone pyenv into PYENV_ROOT
RUN git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT

# 3. Build & install Python 3.12.0 via pyenv
RUN export PATH="$PYENV_ROOT/bin:$PATH" && \
    pyenv install ${PYTHON_VERSION} && \
    pyenv global ${PYTHON_VERSION} && \
    pyenv rehash

# 4. Verify and symlink python & pip to the pyenv‚Äêmanaged 3.12
RUN python --version && python3 --version && pip --version && \
    ln -sfn "$(pyenv which python)" /usr/bin/python && \
    ln -sfn "$(pyenv which python3)" /usr/bin/python3 && \
    ln -sfn "$(pyenv which pip)" /usr/bin/pip

# 5. Create a venv in /app/.venv and install Poetry
RUN python -m venv $POETRY_VENV && \
    $POETRY_VENV/bin/pip install --upgrade pip setuptools && \
    $POETRY_VENV/bin/pip install poetry~=2.1.3

ENV PATH="${PATH}:${POETRY_VENV}/bin"

WORKDIR /app

# 6. Copy lockfiles & install project dependencies (in-project venv)
COPY poetry.lock pyproject.toml ./
RUN poetry config virtualenvs.in-project true
RUN poetry install --no-root

# 7. Copy application code + swagger-ui assets
COPY . .
COPY --from=swagger-ui /usr/share/nginx/html/swagger-ui.css    swagger-ui-assets/swagger-ui.css
COPY --from=swagger-ui /usr/share/nginx/html/swagger-ui-bundle.js swagger-ui-assets/swagger-ui-bundle.js

# 8. Finally, install PyTorch 2.7.1 built against CUDA 11.8
RUN $POETRY_VENV/bin/pip install --upgrade torch==2.7.1+cu118 \
      --extra-index-url https://download.pytorch.org/whl/cu118

CMD ["gunicorn", "--bind", "0.0.0.0:9000", "--workers", "1", "--timeout", "0", "app.webservice:app", "-k", "uvicorn.workers.UvicornWorker"]